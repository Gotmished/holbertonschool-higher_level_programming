The ``2-matrix_divided`` module
===============================

Using ``matrix_divided``
------------------------

Importing function from module:
	>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Checking for module documentation:
	>>> mod = __import__("2-matrix_divided").__doc__
	>>> len(mod) > 1
	True

Checking for function documentation:
	>>> func = __import__("2-matrix_divided").matrix_divided.__doc__
	>>> len(func) > 1
	True

Checking for None as matrix:
	>>> matrix_divided(None, 0)
	Traceback (most recent call last):
  	...
  	TypeError: matrix must be a matrix (list of lists) of integers/floats

Checking for passing none as div:
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, None)
	Traceback (most recent call last):
  	...
	TypeError: div must be a number

Checking for non-list handling:
	>>> matrix = "A string"
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Checking for list and non-list handling:
	>>> matrix = [[4, 5, 9], "A string"]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Checking for rows of differing lengths:
	>>> matrix = [[1], [2, 3, 4]]
	>>> matrix_divided(matrix, 4)
	Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size

Checking for regular division:
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Checking for div = 0 handling:
	>>> matrix = [[2, 4], [3, 5]]
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	...
 	ZeroDivisionError: division by zero

Checking for if div is negative
	>>> matrix = [[2, 4], [3, 5]]
	>>> matrix_divided(matrix, -1)
	[[-2.0, -4.0], [-3.0, -5.0]]

Checking for division with inf:
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, float('inf'))
	[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Checking for handling missing div:
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix)
	Traceback (most recent call last):
	...
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

Checking for handling missing div and matrix:
	>>> matrix_divided()
	Traceback (most recent call last):
	...
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Checking for more than 2 args:
	 >>> matrix_divided(matrix, 1, 3)
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix_divided() takes 2 positional arguments but 3 were given

Checking for mix of ints and floats:
	 >>> matrix = [[1, 2.4, 3], [4.1, 5, 6.8]]
	 >>> matrix_divided(matrix, 11)
	 [[0.09, 0.22, 0.27], [0.37, 0.45, 0.62]]
	 >>> matrix
	 [[1, 2.4, 3], [4.1, 5, 6.8]]
